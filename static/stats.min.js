function renderHighlights(t){if(t.length)for(const[e,a]of Object.entries(t.at(-1))){const t=document.querySelector(`#highlights [data-item="${e}"]`);t&&(t.innerHTML=window[t.dataset.fnc??"formatNumber"](a,t.dataset.decimals??0))}}function renderCharts(t){if(!t.length)return;const e=t.slice(-60),a=e.map((t=>formatDate(t.date)));Object.values(chartConfig).forEach((t=>{renderChart(document.getElementById(t.id),{labels:a,data:e.map((e=>Number(e[t.col]))),label:t.label,color:t.color,type:t.isBar?"bar":"line",reverseY:t.reverseY,isBar:t.isBar,stepped:t.stepped,decimals:t.decimals,grouping:t.grouping})}))}function projectionLimits(t){if(!t.length)return;const e=document.getElementById("projection-points"),a=document.getElementById("projection-date");e&&(e.min=t.at(-1).total),a&&(a.min=(new Date).toISOString().split("T")[0])}async function main(){const[t,e,a]=await Promise.all([fetchTable("db/daily",dailyCols,"total"),fetchTable("db/projects",projectsCols),fetchTable("db/hosts",hostsCols)]);renderHighlights(t),renderCharts(t),projectionLimits(t),renderTable("dailyTable",dailyCols,t,dailyLabels,((t,e)=>"date"===t?`<td>${formatDate(e)}</td>`:t.endsWith("_cng")?`<td>${formatDiff(e)}</td>`:`<td>${formatNumber(e)}</td>`),0,!0),renderTable("projectsTable",projectsCols,e,projectsLabels,((t,e)=>"project"===t?`<td>${e.replace(/^"|"$/g,"")}</td>`:t.startsWith("rank_cng_")?`<td>${formatDiff(e)}</td>`:`<td>${formatNumber(e)}</td>`)),renderTable("hostsTable",hostsCols,a,hostsLabels,((t,e)=>"cpu"===t||"os"===t?`<td>${e}</td>`:`<td>${formatNumber(e)}</td>`))}window.addEventListener("DOMContentLoaded",main);