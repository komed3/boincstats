function renderHighlights(e){if(e.length)for(const[t,a]of Object.entries(e.at(-1))){const e=document.querySelector(`#highlights [data-item="${t}"]`);e&&(e.innerHTML=window[e.dataset.fnc??"formatNumber"](a,e.dataset.decimals??0))}}function renderCharts(e){if(!e.length)return;const t=e.slice(-60),a=t.map((e=>formatDate(e.date)));Object.values(chartConfig).forEach((e=>{renderChart(document.getElementById(e.id),{labels:a,data:t.map((t=>Number(t[e.col]))),label:e.label,color:e.color,type:e.isBar?"bar":"line",reverseY:e.reverseY,isBar:e.isBar,stepped:e.stepped})}))}async function main(){const e=["date","total","daily","rank","rank_cng","team_rank","team_cng","country_rank","country_cng","rac","rac_60","active_rank"],t=["project","total","share","today","daily","weekly","monthly","rank","rank_cng_day","rank_cng_week","rank_cng_month","team_rank","country_rank"],a=["rank","cpu","cores","os","total","daily","weekly","monthly","avg"],[r,n,o]=await Promise.all([fetchTable("db/daily",e,"total"),fetchTable("db/projects",t),fetchTable("db/hosts",a)]);renderHighlights(r),renderCharts(r),renderTable("dailyTable",e,r,["Date","Total","Daily","Rank","Δ Rank","Team Rank","Δ Team","Country Rank","Δ Country","RAC","RAC (60D)","Active Rank"],((e,t)=>"date"===e?`<td>${formatDate(t)}</td>`:e.endsWith("_cng")?`<td>${formatDiff(t)}</td>`:`<td>${formatNumber(t)}</td>`),0,!0),renderTable("projectsTable",t,n,["Project","Total","Share","Today","Daily","Weekly","Monthly","Rank","Δ Day","Δ Week","Δ Month","Team Rank","Country Rank"],((e,t)=>"project"===e?`<td>${t.replace(/^"|"$/g,"")}</td>`:e.startsWith("rank_cng_")?`<td>${formatDiff(t)}</td>`:`<td>${formatNumber(t)}</td>`)),renderTable("hostsTable",a,o,["Rank","CPU","Cores","OS","Total","Daily","Weekly","Monthly","Ø"],((e,t)=>"cpu"===e||"os"===e?`<td>${t}</td>`:`<td>${formatNumber(t)}</td>`))}window.addEventListener("DOMContentLoaded",main);